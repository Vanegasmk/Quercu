// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QuercuBackend.Data;

namespace QuercuBackend.Migrations
{
    [DbContext(typeof(PropertiesContext))]
    [Migration("20211017170624_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("QuercuBackend.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("identification_number");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("telephone");

                    b.HasKey("Id")
                        .HasName("pk_owners");

                    b.ToTable("owners");
                });

            modelBuilder.Entity("QuercuBackend.Models.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<decimal>("Area")
                        .HasColumnType("numeric")
                        .HasColumnName("area");

                    b.Property<decimal>("ConstructionArea")
                        .HasColumnType("numeric")
                        .HasColumnName("construction_area");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("number");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer")
                        .HasColumnName("owner_id");

                    b.Property<int>("PropertyTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("property_type_id");

                    b.HasKey("Id")
                        .HasName("pk_properties");

                    b.HasIndex("OwnerId")
                        .HasDatabaseName("ix_properties_owner_id");

                    b.HasIndex("PropertyTypeId")
                        .HasDatabaseName("ix_properties_property_type_id");

                    b.ToTable("properties");
                });

            modelBuilder.Entity("QuercuBackend.Models.PropertyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.HasKey("Id")
                        .HasName("pk_property_types");

                    b.ToTable("property_types");
                });

            modelBuilder.Entity("QuercuBackend.Models.Property", b =>
                {
                    b.HasOne("QuercuBackend.Models.Owner", "Owner")
                        .WithMany("Properties")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("fk_properties_owners_owner_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuercuBackend.Models.PropertyType", "PropertyType")
                        .WithMany("Properties")
                        .HasForeignKey("PropertyTypeId")
                        .HasConstraintName("fk_properties_property_types_property_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("PropertyType");
                });

            modelBuilder.Entity("QuercuBackend.Models.Owner", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("QuercuBackend.Models.PropertyType", b =>
                {
                    b.Navigation("Properties");
                });
#pragma warning restore 612, 618
        }
    }
}
